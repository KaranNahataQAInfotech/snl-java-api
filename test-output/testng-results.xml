<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="8" passed="7">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="375" started-at="2018-06-26T07:03:09Z" finished-at="2018-06-26T07:03:10Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="375" started-at="2018-06-26T07:03:09Z" finished-at="2018-06-26T07:03:10Z">
      <class name="com.qainfotech.tap.training.snl.api.MainTestClass">
        <test-method status="FAIL" signature="deleteInvalidPlayer()[pri:0, instance:com.qainfotech.tap.training.snl.api.MainTestClass@c87b21]" name="deleteInvalidPlayer" duration-ms="37" started-at="2018-06-26T12:33:09Z" finished-at="2018-06-26T12:33:09Z">
          <exception class="org.json.JSONException">
            <message>
              <![CDATA[JSONObject["uuid"] not a string.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.json.JSONException: JSONObject["uuid"] not a string.
	at org.json.JSONObject.getString(JSONObject.java:721)
	at com.qainfotech.tap.training.snl.api.Board.deletePlayer(Board.java:106)
	at Pages.BoardPage.deletePlayer(BoardPage.java:55)
	at com.qainfotech.tap.training.snl.api.MainTestClass.deleteInvalidPlayer(MainTestClass.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.json.JSONException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteInvalidPlayer -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.qainfotech.tap.training.snl.api.MainTestClass@c87b21]" name="afterMethod" is-config="true" duration-ms="4" started-at="2018-06-26T12:33:09Z" finished-at="2018-06-26T12:33:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="invalidTurnByPlayer()[pri:0, instance:com.qainfotech.tap.training.snl.api.MainTestClass@c87b21]" name="invalidTurnByPlayer" duration-ms="13" started-at="2018-06-26T12:33:09Z" finished-at="2018-06-26T12:33:09Z">
          <exception class="com.qainfotech.tap.training.snl.api.InvalidTurnException">
            <message>
              <![CDATA[Player 'e19d6e29-5d05-4642-94d3-ca2077ffbab0' does not have the turn]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.qainfotech.tap.training.snl.api.InvalidTurnException: Player 'e19d6e29-5d05-4642-94d3-ca2077ffbab0' does not have the turn
	at com.qainfotech.tap.training.snl.api.Board.rollDice(Board.java:171)
	at Pages.BoardPage.rollDiceMethod(BoardPage.java:51)
	at com.qainfotech.tap.training.snl.api.MainTestClass.invalidTurnByPlayer(MainTestClass.java:42)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- com.qainfotech.tap.training.snl.api.InvalidTurnException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidTurnByPlayer -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.qainfotech.tap.training.snl.api.MainTestClass@c87b21]" name="afterMethod" is-config="true" duration-ms="4" started-at="2018-06-26T12:33:09Z" finished-at="2018-06-26T12:33:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="jumpingBackwardWithSnake()[pri:0, instance:com.qainfotech.tap.training.snl.api.MainTestClass@c87b21]" name="jumpingBackwardWithSnake" duration-ms="15" started-at="2018-06-26T12:33:09Z" finished-at="2018-06-26T12:33:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jumpingBackwardWithSnake -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.qainfotech.tap.training.snl.api.MainTestClass@c87b21]" name="afterMethod" is-config="true" duration-ms="3" started-at="2018-06-26T12:33:09Z" finished-at="2018-06-26T12:33:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="jumpingForwardWithLadder()[pri:0, instance:com.qainfotech.tap.training.snl.api.MainTestClass@c87b21]" name="jumpingForwardWithLadder" duration-ms="15" started-at="2018-06-26T12:33:09Z" finished-at="2018-06-26T12:33:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- jumpingForwardWithLadder -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.qainfotech.tap.training.snl.api.MainTestClass@c87b21]" name="afterMethod" is-config="true" duration-ms="5" started-at="2018-06-26T12:33:09Z" finished-at="2018-06-26T12:33:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="moreThanFourPlayerJoining()[pri:0, instance:com.qainfotech.tap.training.snl.api.MainTestClass@c87b21]" name="moreThanFourPlayerJoining" duration-ms="11" started-at="2018-06-26T12:33:09Z" finished-at="2018-06-26T12:33:09Z">
          <exception class="com.qainfotech.tap.training.snl.api.MaxPlayersReachedExeption">
            <message>
              <![CDATA[The board already has maximum allowed Player: 4]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.qainfotech.tap.training.snl.api.MaxPlayersReachedExeption: The board already has maximum allowed Player: 4
	at com.qainfotech.tap.training.snl.api.Board.registerPlayer(Board.java:69)
	at Pages.BoardPage.createPlayers(BoardPage.java:40)
	at com.qainfotech.tap.training.snl.api.MainTestClass.moreThanFourPlayerJoining(MainTestClass.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- com.qainfotech.tap.training.snl.api.MaxPlayersReachedExeption -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- moreThanFourPlayerJoining -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.qainfotech.tap.training.snl.api.MainTestClass@c87b21]" name="afterMethod" is-config="true" duration-ms="3" started-at="2018-06-26T12:33:09Z" finished-at="2018-06-26T12:33:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="newPositionGreaterThan100()[pri:0, instance:com.qainfotech.tap.training.snl.api.MainTestClass@c87b21]" name="newPositionGreaterThan100" duration-ms="91" started-at="2018-06-26T12:33:09Z" finished-at="2018-06-26T12:33:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newPositionGreaterThan100 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.qainfotech.tap.training.snl.api.MainTestClass@c87b21]" name="afterMethod" is-config="true" duration-ms="5" started-at="2018-06-26T12:33:10Z" finished-at="2018-06-26T12:33:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="playerJoiningAfterGameStarted()[pri:0, instance:com.qainfotech.tap.training.snl.api.MainTestClass@c87b21]" name="playerJoiningAfterGameStarted" duration-ms="11" started-at="2018-06-26T12:33:10Z" finished-at="2018-06-26T12:33:10Z">
          <exception class="com.qainfotech.tap.training.snl.api.GameInProgressException">
            <message>
              <![CDATA[New player cannot join since the game has started]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.qainfotech.tap.training.snl.api.GameInProgressException: New player cannot join since the game has started
	at com.qainfotech.tap.training.snl.api.Board.registerPlayer(Board.java:77)
	at Pages.BoardPage.createPlayers(BoardPage.java:40)
	at com.qainfotech.tap.training.snl.api.MainTestClass.playerJoiningAfterGameStarted(MainTestClass.java:35)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- com.qainfotech.tap.training.snl.api.GameInProgressException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- playerJoiningAfterGameStarted -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.qainfotech.tap.training.snl.api.MainTestClass@c87b21]" name="afterMethod" is-config="true" duration-ms="2" started-at="2018-06-26T12:33:10Z" finished-at="2018-06-26T12:33:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="playerJoiningWithSameName()[pri:0, instance:com.qainfotech.tap.training.snl.api.MainTestClass@c87b21]" name="playerJoiningWithSameName" duration-ms="9" started-at="2018-06-26T12:33:10Z" finished-at="2018-06-26T12:33:10Z">
          <exception class="com.qainfotech.tap.training.snl.api.PlayerExistsException">
            <message>
              <![CDATA[Player 'Ka 0' already exists on board]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.qainfotech.tap.training.snl.api.PlayerExistsException: Player 'Ka 0' already exists on board
	at com.qainfotech.tap.training.snl.api.Board.registerPlayer(Board.java:74)
	at Pages.BoardPage.createPlayers(BoardPage.java:40)
	at com.qainfotech.tap.training.snl.api.MainTestClass.playerJoiningWithSameName(MainTestClass.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- com.qainfotech.tap.training.snl.api.PlayerExistsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- playerJoiningWithSameName -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.qainfotech.tap.training.snl.api.MainTestClass@c87b21]" name="afterMethod" is-config="true" duration-ms="3" started-at="2018-06-26T12:33:10Z" finished-at="2018-06-26T12:33:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.qainfotech.tap.training.snl.api.MainTestClass -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
